pipeline {
    agent {
        docker {
            image 'maven:3-alpine'
            args '-v $HOME/.m2:/root/.m2:z -u root'
            reuseNode true
            // args '-v root'
            // args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
// pipeline{
    // agent{
    //     docker{
    //         image 'maven:3-alphine' //this param  downloads  maven docker image and runs this image in a separate container(separate from Jenkins)
    //         // args '-v/root/.m2:root/.m2' // creates a reciprocal mapping btn the /root/.m2 in short-lived and the docker host filesystem
    //         
    //     }
    // }
    // stages{
    //     stage('build'){
    //         steps{
    //             sh 'mvn -B _DskipTests clean package' //sh runs the maven command to cleanly without running any tests
    //         }
    //     }
    // }
    


// docker run \
//   -u root \
//   --rm \
//   -d \
//   -p 8080:8080 \
//   -p 50000:50000 \
//   -v /Users/okellodesmond/Desktop/Jenkins_Home:/var/jenkins_home \
//   -v /var/run/docker.sock:/var/run/docker.sock \
//   jenkinsci/blueocean
}
